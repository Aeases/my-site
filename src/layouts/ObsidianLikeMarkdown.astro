---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

// type Props = CollectionEntry<'blog'>['data'];

// This is now seperated from the CollectionEntry ^^^^^, this describes what this layout can handle only, not wat all blog posts should have.
interface Props {
    title: string;
    description: string;
    pubDate?: Date;
    updatedDate?: Date;
    heroImage: ImageMetadata;
}

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
    <head>
        <BaseHead title={title} description={description} />
        <style>



            


            @media (max-width: 720px) {
                main {
                    padding: 0;
                    margin: 0;
                }
                .hero-image {
                    /* max-width: 80vw; */
                    /* & img { */
                    /*     max-height: unset; */
                    /* } */
                }
                .prose{
                    padding: 1em;
                    max-width: 100vw;
                }

            }


            .page-preamble {
                text-align: center;
                line-height: 1;
                display: grid;
                padding: 1em 0;
                margin-bottom: 1em;
            }
            .hero-image {
                margin: 0em 5em;
                object-fit: contain;
                border-radius: 12px;
            }
            .title {
                margin: 0 0 0.1em;
                font-size: 3rem;
                font-size: 3rem;
                line-height: 1.2;
                font-family: var(--fancy-title-fonts);
            }
            .description, .date {
                font-family: 'SourceCodePro';
                margin-bottom: 0.75em;
            }
            .date {
                margin-bottom: 0.5em;
                color: var(--color-tx-muted);
                
            }

            .last-updated-on {
                font-style: italic;
            }
            .prose {
                color: var(--color-tx-normal);
                font-family: -apple-system, BlinkMacSystemFont, "Inter", "IBM Plex Sans", Segoe UI, Helvetica, Arial, sans-serif;

                a {
                    text-decoration: underline;
                }

                a:hover {
                    color: var(--color-bl);
                }

                blockquote[data-callout] {
                    padding: 12px 12px 12px 24px;
                    border-radius: 4px;

                    background-color: rgba(var(--callout-color), 0.1);
                    & > *:is(p, div):not(.callout-title) {
                        /* font-style: unset; */
                        margin-block-start: 1rem;
                        margin-block-end: 1rem;
                    }

                    & > p {
                        color: var(--color-tx-normal);
                    }

                    & > .callout-title {
                        vertical-align: middle;
                        align-items: center;
                        padding: 0;
                        display: flex;
                        gap: 4px;
                        color: rgb(var(--callout-color));
                        font-weight: var(--callout-title-weight);
                        line-height: 1.3;
                    }
                }

                blockquote[data-callout="error"][data-callout="error"] {
                    --callout-color: var(--flexoki-red-400-rgb);
                }

                blockquote[data-callout="cite"][data-callout="cite"] {
                    --callout-color: 158, 158, 158;
                }

                blockquote[data-callout="info"][data-callout="info"] {
                    --callout-color: 67, 133, 190;
                }

                [data-expanded="false"] .callout-content {
                    max-height: 0;
                    overflow: hidden;
                    transition: max-height 0.2s ease-out;
                }

                [data-expanded="true"] .callout-content {
                    max-height: 100px; /* or whatever height needed */
                }

                [data-expandable="true"] .callout-title {
                    cursor: pointer;
                }



                ul>li {
                    padding: 0.15em, 0;
                    list-style-position: inside;
                    list-style-type: "â€¢ ";
                    &::marker {
                        color: var(--color-tx-faint);
                        font-size: 105%;
                    }
                }

                p {
                    margin-bottom: 1.5rem;
                }

                /* Regular blockquotes */
                blockquote:not([data-callout]) {
                    border-left: 1px solid var(--color-ui-normal);
                    padding: 0 0 0 20px;
                    margin: 0px;
                    p {
                        color: var(--color-tx-muted);
                    }
                }

                h1 {
                    color: var(--color-prominent);
                    font-weight: 849;
                    font-size: 2.5rem;
                }
                h2 {
                    color: var(--color-re);
                    font-weight: 650;
                    font-size: 2.15rem
                }
                h3 { 
                    color: var(--color-ye);
                    font-weight: 700;
                    font-size: 2rem
                }
                h4 {
                    color: var(--color-gr);
                    font-weight: 700;
                    font-size: 1.9rem;
                }
                h5 {
                    color: var(--color-bl);
                    font-weight: 700;
                    font-size: 1.8rem;
                }
                h6 {
                    color: var(--color-pu);
                    font-weight: 600;
                    font-size: 1.65rem;
                }
            }


        </style>
    </head>

    <body class="theme-dark">
        <Header />
        <main>
            <article>

                    <div class="hero-image">
                    {heroImage && <Image width={1020} height={1020} src={heroImage} alt="" />}
                    </div>
                <div class="page-preamble">
                    <div class="title">{title}</div>
                    {description && <div class="description">
                        {description}
                    </div>}
                        
                    {pubDate && <div class="date">
                        {pubDate && <FormattedDate date={pubDate} />}
                        {
                            updatedDate && (
                                <div class="last-updated-on">
                                    Last updated on <FormattedDate date={updatedDate} />
                                </div>
                            )
                        }
                    </div>}
                    <hr style="margin: 1em auto 0em auto; max-width: 95%;" />
                </div>
                <div class="prose">
                    <slot />
                </div>
            </article>
        </main>
        <Footer />
    </body>
</html>
